package de.saschahlusiak.freebloks.network

import de.saschahlusiak.freebloks.client.GameClient
import de.saschahlusiak.freebloks.client.GameClientMessageHandler
import de.saschahlusiak.freebloks.model.GameConfig
import de.saschahlusiak.freebloks.model.GameMode
import de.saschahlusiak.freebloks.model.Game
import de.saschahlusiak.freebloks.utils.CrashReporter
import de.saschahlusiak.freebloks.utils.ubyteArrayOf
import org.junit.Assert.*
import org.junit.Test
import java.io.*

class NetworkGameTest {
    private val gameDataClassic = ubyteArrayOf(
        //region data
        0x06, 0x00, 0xab, 0x07, 0xd7, 0x00, 0x04, 0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0xae, 0x62, 0xc4, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xab, 0x50, 0xbb, 0x00, 0x0b, 0x15, 0xee, 0x04, 0xac, 0x85, 0xd8, 0x00, 0x00, 0x40, 0xc4, 0xf4, 0xac,
        0x85, 0xd8, 0x00, 0xac, 0x85, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x40, 0x91, 0x22, 0xee, 0x01, 0x00, 0x00, 0x00, 0x00, 0xac, 0x50, 0xbb, 0x38, 0xac, 0x50,
        0xbb, 0xc4, 0xfd, 0x51, 0xbb, 0xab, 0xa3, 0xa0, 0xa7, 0x00, 0x91, 0x22, 0xee, 0x46, 0xac, 0x50, 0xbb, 0xc4, 0xfd, 0x51, 0xbb, 0xe8, 0xab, 0x50, 0xbb,
        0x00, 0xae, 0x62, 0xc4, 0x18, 0x00, 0x00, 0x00, 0x34, 0x7c, 0x22, 0xee, 0xe8, 0xab, 0x50, 0xbb, 0x00, 0x83, 0x14, 0xee, 0xa0, 0xae, 0x62, 0xc4, 0x08,
        0x02, 0xff, 0xff, 0xf8, 0xab, 0x50, 0xbb, 0x00, 0x84, 0x14, 0xee, 0xff, 0x25, 0x19, 0xee, 0xc4, 0xfd, 0x51, 0xbb, 0x28, 0xac, 0x50, 0xbb, 0x03, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0xab, 0x07,
        0xd7, 0x00, 0x04, 0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x65, 0x51, 0xbb, 0xf8, 0x16, 0x89, 0xd8, 0x04,
        0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x65, 0x51, 0xbb, 0x14, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x10, 0x89, 0xd8, 0x4c, 0x15, 0x89, 0xd8, 0xc4, 0xfd, 0x51,
        0xbb, 0xa8, 0xab, 0x50, 0xbb, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x16, 0x89, 0xd8, 0xc4, 0xfd, 0x51, 0xbb, 0xc8, 0xab, 0x50, 0xbb, 0x00, 0x6b, 0x51, 0xbb,
        0xf8, 0x16, 0x89, 0xd8, 0x00, 0x10, 0x89, 0xd8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x40, 0x91, 0x22, 0xee, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x6a, 0x51, 0xbb, 0x14, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x68, 0x15, 0x89, 0xd8, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x05, 0x05, 0xdb, 0x07, 0x00, 0x06,
        0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0f, 0x01, 0x00, 0x00, 0x11, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7,
        0x01, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x13, 0x01, 0x01, 0x10, 0xff, 0x07, 0x00,
        0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x0f, 0x00, 0x02, 0x11, 0x11, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04,
        0xd7, 0x00, 0x0d, 0x00, 0x01, 0x02, 0x0e, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x0d, 0x00, 0x00, 0x02, 0x03, 0x07,
        0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x10, 0x00, 0x00, 0x0e, 0x01, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b,
        0x04, 0xd7, 0x03, 0x0d, 0x00, 0x02, 0x0f, 0x0e, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x10, 0x00, 0x00, 0x05, 0x0c,
        0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x0b, 0x00, 0x02, 0x05, 0x06, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00,
        0x0b, 0x04, 0xd7, 0x02, 0x0f, 0x00, 0x01, 0x0c, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x13, 0x01, 0x03, 0x0b,
        0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0e, 0x00, 0x00, 0x08, 0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05,
        0x00, 0x0b, 0x04, 0xd7, 0x01, 0x0e, 0x00, 0x01, 0x08, 0x03, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0d, 0x00, 0x00,
        0x0e, 0x07, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x11, 0x01, 0x02, 0x0a, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00,
        0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x11, 0x00, 0x03, 0x04, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x11, 0x00,
        0x00, 0x09, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0b, 0x00, 0x03, 0x0f, 0x0a, 0x07, 0x00, 0x06, 0x03, 0xd4,
        0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x10, 0x00, 0x00, 0x08, 0x0d, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x12,
        0x00, 0x01, 0x07, 0x0e, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x12, 0x00, 0x02, 0x02, 0x07, 0x07, 0x00, 0x06, 0x03,
        0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x12, 0x00, 0x01, 0x0f, 0x0c, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03,
        0x0e, 0x00, 0x01, 0x0a, 0x0f, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0c, 0x00, 0x02, 0x0b, 0x0e, 0x07, 0x00, 0x06,
        0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x13, 0x01, 0x02, 0x0b, 0x07, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7,
        0x02, 0x11, 0x00, 0x00, 0x0c, 0x0e, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x12, 0x00, 0x03, 0x06, 0x10, 0x07, 0x00,
        0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0b, 0x00, 0x01, 0x0c, 0x11, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04,
        0xd7, 0x01, 0x0a, 0x00, 0x01, 0x0e, 0x05, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x07, 0x00, 0x00, 0x0a, 0x01, 0x07,
        0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x07, 0x00, 0x01, 0x04, 0x0f, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b,
        0x04, 0xd7, 0x00, 0x09, 0x00, 0x03, 0x02, 0x0a, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x05, 0x00, 0x02, 0x10, 0x07,
        0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0c, 0x00, 0x01, 0x07, 0x01, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00,
        0x0b, 0x04, 0xd7, 0x03, 0x0c, 0x00, 0x03, 0x0d, 0x11, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x13, 0x01, 0x02, 0xff,
        0x07, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x09, 0x00, 0x02, 0x10, 0x02, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05,
        0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0e, 0x00, 0x01, 0x04, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x08, 0x00, 0x00,
        0x0c, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0a, 0x00, 0x03, 0x00, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01,
        0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x06, 0x00, 0x02, 0x12, 0x09, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x09, 0x00,
        0x01, 0x05, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x05, 0x01, 0x01, 0x01, 0x12, 0x07, 0x00, 0x06, 0x03, 0xd4,
        0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x05, 0x00, 0x00, 0x08, 0x06, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x07,
        0x01, 0x01, 0x11, 0x0c, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x06, 0x00, 0x00, 0x02, 0x05, 0x07, 0x00, 0x06, 0x03,
        0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x03, 0x00, 0x01, 0x05, 0x12, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00,
        0x01, 0x00, 0x00, 0x09, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x02, 0x00, 0x02, 0x11, 0x0f, 0x07, 0x00, 0x06,
        0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x03, 0x00, 0x00, 0x01, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7,
        0x03, 0x01, 0x00, 0x01, 0x0f, 0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x02, 0x00, 0x03, 0x09, 0x09, 0x07, 0x00,
        0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x03, 0x00, 0x00, 0x12, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04,
        0xd7, 0x02, 0x0a, 0x00, 0x00, 0x00, 0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x07, 0x07,
        0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x06, 0x00, 0x00, 0xff, 0x0e, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b,
        0x04, 0xd7, 0x01, 0x01, 0x00, 0x01, 0x0f, 0x09, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x02, 0x00, 0x01, 0x02, 0x0e,
        0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00,
        0x0b, 0x04, 0xd7, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x05, 0x00, 0x03, 0x01,
        0xff, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x14, 0x00, 0x01, 0x0a, 0xfe, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05,
        0x00, 0x0b, 0x04, 0xd7, 0x02, 0x01, 0x00, 0x01, 0x01, 0x03, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x00, 0x00, 0x00,
        0x01, 0x10, 0x03, 0x00, 0x05, 0x06, 0xdb, 0x07, 0x00, 0x06, 0x03, 0xd4, 0xff, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x00, 0x04, 0x01, 0x14, 0x14, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x02, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0xae, 0x50, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xad, 0x50, 0xbb, 0x00,
        0x2c, 0x20, 0xee, 0x28, 0xae, 0x50, 0xbb, 0x00, 0x06, 0x00, 0x00, 0xe0, 0xad, 0x50, 0xbb, 0x00, 0x51, 0x20, 0xee, 0xd0, 0x9a, 0x51, 0xef, 0xff, 0xff,
        0xff, 0xff, 0xc4, 0xfd, 0x51, 0xbb, 0x00, 0xa7, 0x51, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xae, 0x50, 0xbb, 0x00, 0x34, 0x20,
        0xee, 0xd0, 0x9a, 0x51, 0xef, 0x58, 0xae, 0x50, 0xbb, 0x40, 0x91, 0x22, 0xee, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0xcd, 0x1d,
        0x34, 0x7c, 0x22, 0xee, 0x00, 0xab, 0x1b, 0xee, 0x51, 0x00, 0x00, 0x00, 0xd0, 0xae, 0x50, 0xbb, 0x58, 0xae, 0x50, 0xbb, 0x00, 0xab, 0x1b, 0xee, 0xc8,
        0xae, 0x50, 0xbb, 0x30, 0xae, 0x50, 0xbb, 0x68, 0xae, 0x50, 0xbb, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x00, 0x04, 0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02,
        0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0xae, 0x50, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xad, 0x50, 0xbb, 0x00, 0x2c, 0x20, 0xee, 0x28,
        0xae, 0x50, 0xbb, 0x00, 0x06, 0x00, 0x00, 0xe0, 0xad, 0x50, 0xbb, 0x00, 0x51, 0x20, 0xee, 0xd0, 0x9a, 0x51, 0xef, 0xff, 0xff, 0xff, 0xff, 0xc4, 0xfd,
        0x51, 0xbb, 0x00, 0xa7, 0x51, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xae, 0x50, 0xbb, 0x00, 0x34, 0x20, 0xee, 0xd0, 0x9a, 0x51,
        0xef, 0x58, 0xae, 0x50, 0xbb, 0x40, 0x91, 0x22, 0xee, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0xcd, 0x1d, 0x34, 0x7c, 0x22, 0xee,
        0x00, 0xab, 0x1b, 0xee, 0x51, 0x00, 0x00, 0x00, 0xd0, 0xae, 0x50, 0xbb, 0x58, 0xae, 0x50, 0xbb, 0x00, 0xab, 0x1b, 0xee, 0xc8, 0xae, 0x50, 0xbb, 0x30,
        0xae, 0x50, 0xbb, 0x68, 0xae, 0x50, 0xbb, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01
        //endregion
    )

    private val gameDataDuo = ubyteArrayOf(
        //region data
        0x06, 0x00, 0xab, 0x07, 0xd7, 0x00, 0x02, 0x01, 0x0e, 0x0e, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0xec, 0xaa, 0xc2, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x5b, 0x8f, 0xc2, 0x00, 0x0b, 0x15, 0xee, 0x04, 0xd6, 0x85, 0xd8, 0x00, 0x00, 0x80, 0xc2, 0xf4, 0xd6,
        0x85, 0xd8, 0x00, 0xd6, 0x85, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x40, 0x91, 0x22, 0xee, 0x01, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x8f, 0xc2, 0x38, 0x5c, 0x8f,
        0xc2, 0xc4, 0xfd, 0x51, 0xbb, 0xab, 0xa3, 0xa0, 0xa7, 0x00, 0x91, 0x22, 0xee, 0x46, 0x5c, 0x8f, 0xc2, 0xc4, 0xfd, 0x51, 0xbb, 0xe8, 0x5b, 0x8f, 0xc2,
        0x00, 0xec, 0xaa, 0xc2, 0x18, 0x00, 0x00, 0x00, 0x34, 0x7c, 0x22, 0xee, 0xe8, 0x5b, 0x8f, 0xc2, 0x00, 0x83, 0x14, 0xee, 0xa0, 0xec, 0xaa, 0xc2, 0x08,
        0x02, 0xff, 0xff, 0xf8, 0x5b, 0x8f, 0xc2, 0x00, 0x84, 0x14, 0xee, 0xff, 0x25, 0x19, 0xee, 0xc4, 0xfd, 0x51, 0xbb, 0x28, 0x5c, 0x8f, 0xc2, 0x03, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0xab, 0x07,
        0xd7, 0x00, 0x02, 0x01, 0x0e, 0x0e, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x65, 0x51, 0xbb, 0x38, 0xb5, 0x82, 0xd8, 0x04,
        0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x65, 0x51, 0xbb, 0x0e, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x82, 0xd8, 0x4c, 0xb5, 0x82, 0xd8, 0xc4, 0xfd, 0x51,
        0xbb, 0xa8, 0x5b, 0x8f, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x38, 0xb5, 0x82, 0xd8, 0xc4, 0xfd, 0x51, 0xbb, 0xc8, 0x5b, 0x8f, 0xc2, 0x00, 0x6b, 0x51, 0xbb,
        0x38, 0xb5, 0x82, 0xd8, 0x00, 0xb0, 0x82, 0xd8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x40, 0x91, 0x22, 0xee, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x6a, 0x51, 0xbb, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x68, 0xb5, 0x82, 0xd8, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x05, 0x05, 0xdb, 0x07, 0x00, 0x06,
        0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x10, 0x00, 0x00, 0x04, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7,
        0x02, 0x10, 0x00, 0x00, 0x08, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x11, 0x00, 0x00, 0x05, 0x04, 0x07, 0x00,
        0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x12, 0x00, 0x01, 0x05, 0x01, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04,
        0xd7, 0x00, 0x0d, 0x00, 0x03, 0x08, 0x07, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x14, 0x00, 0x00, 0x09, 0x06, 0x07,
        0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0f, 0x01, 0x03, 0x03, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b,
        0x04, 0xd7, 0x02, 0x0f, 0x00, 0x00, 0x02, 0x02, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x13, 0x01, 0x00, 0x00, 0x02,
        0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x13, 0x00, 0x02, 0x00, 0x05, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00,
        0x0b, 0x04, 0xd7, 0x00, 0x12, 0x00, 0x01, 0x09, 0x09, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x07, 0x01, 0x01, 0x02,
        0x09, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x14, 0x00, 0x00, 0xfe, 0x06, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05,
        0x00, 0x0b, 0x04, 0xd7, 0x02, 0x11, 0x00, 0x03, 0x05, 0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0c, 0x00, 0x02,
        0x01, 0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x09, 0x00, 0x03, 0x02, 0xff, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00,
        0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x09, 0x01, 0x00, 0x0c, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x06, 0x00,
        0x00, 0xff, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x05, 0x00, 0x01, 0x09, 0x0c, 0x07, 0x00, 0x06, 0x03, 0xd4,
        0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x05, 0x01, 0x03, 0x07, 0xff, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x06,
        0x00, 0x03, 0x06, 0x0a, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x02, 0x00, 0x01, 0x04, 0x07, 0x07, 0x00, 0x06, 0x03,
        0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x00, 0x00, 0x00, 0x03, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02,
        0x01, 0x00, 0x00, 0x00, 0x09, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x07, 0x00, 0x06,
        0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x00, 0x00, 0x00, 0x04, 0x0d, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7,
        0x00, 0x01, 0x00, 0x00, 0x0c, 0x0c, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0d, 0x00, 0x01, 0x09, 0x00, 0x07, 0x00,
        0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0e, 0x01, 0x01, 0x0b, 0x03, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04,
        0xd7, 0x02, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x03, 0x00, 0x05, 0x06, 0xdb, 0x07, 0x00, 0x06, 0x03, 0xd4, 0xff, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x00, 0x02,
        0x01, 0x0e, 0x0e, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x5e, 0x8f, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xc8, 0x5d, 0x8f, 0xc2, 0x00, 0x2c, 0x20, 0xee, 0x28, 0x5e, 0x8f, 0xc2, 0x00, 0x06, 0x00, 0x00, 0xe0, 0x5d, 0x8f, 0xc2, 0x00, 0x51, 0x20, 0xee, 0xd0,
        0x9a, 0x51, 0xef, 0xff, 0xff, 0xff, 0xff, 0xc4, 0xfd, 0x51, 0xbb, 0x00, 0xa7, 0x51, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x5e,
        0x8f, 0xc2, 0x00, 0x34, 0x20, 0xee, 0xd0, 0x9a, 0x51, 0xef, 0x58, 0x5e, 0x8f, 0xc2, 0x40, 0x91, 0x22, 0xee, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x65, 0xcd, 0x1d, 0x34, 0x7c, 0x22, 0xee, 0x00, 0xab, 0x1b, 0xee, 0x47, 0x00, 0x00, 0x00, 0xd0, 0x5e, 0x8f, 0xc2, 0x58, 0x5e, 0x8f, 0xc2,
        0x00, 0xab, 0x1b, 0xee, 0xc8, 0x5e, 0x8f, 0xc2, 0x30, 0x5e, 0x8f, 0xc2, 0x68, 0x5e, 0x8f, 0xc2, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01
        //endregion
    )

    private val gameDataJunior = ubyteArrayOf(
        //region data
        0x06, 0x00, 0xab, 0x07, 0xd7, 0x00, 0x02, 0x01, 0x0e, 0x0e, 0x01, 0x01, 0x01, 0x01, 0x01, 0x04, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x36, 0x89, 0xd8, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x5b, 0x8f, 0xc2, 0x00, 0x0b, 0x15, 0xee, 0x04, 0x97, 0x85, 0xd8, 0x00, 0x00, 0x80, 0xd8, 0xf4, 0x97,
        0x85, 0xd8, 0x00, 0x97, 0x85, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x40, 0x91, 0x22, 0xee, 0x01, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x8f, 0xc2, 0x38, 0x5c, 0x8f,
        0xc2, 0xc4, 0xfd, 0x51, 0xbb, 0xab, 0xa3, 0xa0, 0xa7, 0x00, 0x91, 0x22, 0xee, 0x46, 0x5c, 0x8f, 0xc2, 0xc4, 0xfd, 0x51, 0xbb, 0xe8, 0x5b, 0x8f, 0xc2,
        0x00, 0x36, 0x89, 0xd8, 0x18, 0x00, 0x00, 0x00, 0x34, 0x7c, 0x22, 0xee, 0xe8, 0x5b, 0x8f, 0xc2, 0x00, 0x83, 0x14, 0xee, 0x40, 0x36, 0x89, 0xd8, 0x08,
        0x02, 0xff, 0xff, 0xf8, 0x5b, 0x8f, 0xc2, 0x00, 0x84, 0x14, 0xee, 0xff, 0x25, 0x19, 0xee, 0xc4, 0xfd, 0x51, 0xbb, 0x28, 0x5c, 0x8f, 0xc2, 0x03, 0x01,
        0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0xab, 0x07,
        0xd7, 0x00, 0x02, 0x01, 0x0e, 0x0e, 0x01, 0x01, 0x01, 0x01, 0x01, 0x04, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x65, 0x51, 0xbb, 0x38, 0x15, 0xeb, 0xe3, 0x04,
        0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x65, 0x51, 0xbb, 0x0e, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x10, 0xeb, 0xe3, 0x4c, 0x15, 0xeb, 0xe3, 0xc4, 0xfd, 0x51,
        0xbb, 0xa8, 0x5b, 0x8f, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x38, 0x15, 0xeb, 0xe3, 0xc4, 0xfd, 0x51, 0xbb, 0xc8, 0x5b, 0x8f, 0xc2, 0x00, 0x6b, 0x51, 0xbb,
        0x38, 0x15, 0xeb, 0xe3, 0x00, 0x10, 0xeb, 0xe3, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x40, 0x91, 0x22, 0xee, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x6a, 0x51, 0xbb, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x68, 0x15, 0xeb, 0xe3, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00,
        0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x05, 0x05, 0xdb, 0x07, 0x00, 0x06,
        0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x10, 0x00, 0x00, 0x04, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7,
        0x02, 0x10, 0x00, 0x00, 0x08, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x14, 0x00, 0x00, 0x05, 0x04, 0x07, 0x00,
        0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x13, 0x01, 0x01, 0x05, 0x02, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04,
        0xd7, 0x00, 0x13, 0x01, 0x02, 0x02, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x11, 0x00, 0x00, 0x06, 0x07, 0x07,
        0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x11, 0x01, 0x01, 0x06, 0x09, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b,
        0x04, 0xd7, 0x02, 0x0d, 0x00, 0x03, 0x02, 0x02, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x09, 0x01, 0x02, 0x09, 0x07,
        0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x12, 0x00, 0x00, 0xff, 0x05, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00,
        0x0b, 0x04, 0xd7, 0x00, 0x12, 0x01, 0x00, 0x09, 0x03, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x09, 0x01, 0x00, 0x02,
        0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x06, 0x00, 0x03, 0x07, 0x01, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05,
        0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0e, 0x01, 0x01, 0x04, 0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0a, 0x00, 0x01,
        0x04, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x08, 0x00, 0x01, 0x07, 0x0a, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00,
        0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x05, 0x00, 0x02, 0x0b, 0x0a, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x05, 0x01,
        0x01, 0x0b, 0x0c, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0f, 0x01, 0x02, 0x0a, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4,
        0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x07, 0x01, 0x01, 0x04, 0x05, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x06,
        0x00, 0x02, 0x0c, 0x02, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x14, 0x00, 0x00, 0xfe, 0x00, 0x07, 0x00, 0x06, 0x03,
        0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x01, 0x00, 0x01, 0x0c, 0x06, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02,
        0x0a, 0x00, 0x02, 0xff, 0x0a, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x07, 0x00, 0x06,
        0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7,
        0x02, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x03, 0x00, 0x05, 0x06, 0xdb, 0x07, 0x00, 0x06, 0x03, 0xd4, 0xff, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x00, 0x02, 0x01,
        0x0e, 0x0e, 0x01, 0x01, 0x01, 0x01, 0x01, 0x04, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x5e, 0x8f, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8,
        0x5d, 0x8f, 0xc2, 0x00, 0x2c, 0x20, 0xee, 0x28, 0x5e, 0x8f, 0xc2, 0x00, 0x06, 0x00, 0x00, 0xe0, 0x5d, 0x8f, 0xc2, 0x00, 0x51, 0x20, 0xee, 0xd0, 0x9a,
        0x51, 0xef, 0xff, 0xff, 0xff, 0xff, 0xc4, 0xfd, 0x51, 0xbb, 0x00, 0xa7, 0x51, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x5e, 0x8f,
        0xc2, 0x00, 0x34, 0x20, 0xee, 0xd0, 0x9a, 0x51, 0xef, 0x58, 0x5e, 0x8f, 0xc2, 0x40, 0x91, 0x22, 0xee, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x65, 0xcd, 0x1d, 0x34, 0x7c, 0x22, 0xee, 0x00, 0xab, 0x1b, 0xee, 0x47, 0x00, 0x00, 0x00, 0xd0, 0x5e, 0x8f, 0xc2, 0x58, 0x5e, 0x8f, 0xc2, 0x00,
        0xab, 0x1b, 0xee, 0xc8, 0x5e, 0x8f, 0xc2, 0x30, 0x5e, 0x8f, 0xc2, 0x68, 0x5e, 0x8f, 0xc2, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02,
        0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01
        //endregion
    )

    private val gameDataClassicManual = ubyteArrayOf(
        //region data
        0x06, 0x00, 0xab, 0x07, 0xd7, 0x00, 0x04, 0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x7f, 0x00, 0x00, 0x40,
        0xbf, 0x8d, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x10, 0xc0, 0x8d, 0xfc, 0x00, 0x7f, 0x00, 0x00, 0x50, 0xbf, 0x8d, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x70, 0x01,
        0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x80, 0x6d, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, 0x8d, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x61, 0x6d, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x79, 0x6f, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x05, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc6, 0x8d, 0xfc, 0x03, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0x06, 0x02,
        0xd2, 0x00, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x01, 0x03, 0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x00, 0xfe, 0xfe, 0xfe, 0x53, 0x61, 0x73,
        0x63, 0x68, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x0c, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x32, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0xae, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x79, 0x6f,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x05, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00,
        0xab, 0x07, 0xd7, 0x01, 0x03, 0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x00, 0xfe, 0xfe, 0xfe, 0x53, 0x61, 0x73, 0x63, 0x68, 0x69, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x05, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0c, 0xf1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x80, 0x0a, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0c, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x30, 0x05, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x5a, 0x40, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x40, 0x05, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0x0a, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x05, 0xf1, 0x00, 0x03, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x01,
        0x03, 0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x00, 0xfe, 0xfe, 0xfe, 0x53, 0x61, 0x73, 0x63, 0x68, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x30, 0x05, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0c, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
        0x0a, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0c, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x05,
        0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x5a, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x05, 0xf1,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0x0a, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x05, 0xf1, 0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x18, 0x00, 0x18, 0x08, 0xd6, 0xff, 0x0f, 0x43, 0x6c, 0x69,
        0x65, 0x6e, 0x74, 0x20, 0x31, 0x20, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x00, 0x00, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x01, 0x03, 0x02, 0x14, 0x14, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x02, 0x00, 0xfe, 0xfe, 0xfe, 0x53, 0x61, 0x73, 0x63, 0x68, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc0, 0x8d, 0xfc,
        0x00, 0x7f, 0x00, 0x00, 0x40, 0xfc, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00,
        0x40, 0x00, 0x00, 0x80, 0x6d, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xfc, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x5c, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x6d, 0x40, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x05, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x02, 0x02, 0x02, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x02, 0x00, 0x01, 0xfe, 0xfe, 0x53, 0x61, 0x73, 0x63, 0x68, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x0c, 0x71, 0x00, 0x74, 0x65, 0x73, 0x74,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x32,
        0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0xae, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x79, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x05, 0xf1, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x09, 0x00, 0x0b, 0x08, 0xe7, 0x01, 0x02, 0x68, 0x69, 0x00, 0xb4, 0x09, 0x00, 0x06, 0x0d, 0xec, 0x00, 0x06, 0x00,
        0xab, 0x07, 0xd7, 0x01, 0x03, 0x02, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0x01, 0xfe, 0xfe, 0x53, 0x61, 0x73, 0x63, 0x68, 0x69, 0x00,
        0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x31, 0x0c, 0x71, 0x00, 0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x47, 0xbe, 0x8d, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x70, 0x01, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xed, 0xae, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xbe, 0x8d, 0xfc, 0xfe, 0x7f, 0x00,
        0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0x06, 0x02, 0xd2, 0x02,
        0x06, 0x00, 0xab, 0x07, 0xd7, 0x02, 0x02, 0x02, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0x01, 0x00, 0xfe, 0x53, 0x61, 0x73, 0x63, 0x68,
        0x69, 0x00, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x31, 0x0c, 0x71, 0x00, 0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xbe, 0x8d, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x70, 0x01, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xed, 0xae, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xbd, 0x8d, 0xfc, 0xfe,
        0x7f, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x09, 0x00, 0x06, 0x0d,
        0xec, 0x02, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x01, 0x03, 0x02, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0x01, 0xfe, 0xfe, 0x53, 0x61, 0x73,
        0x63, 0x68, 0x69, 0x00, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x31, 0x0c, 0x71, 0x00, 0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xbe, 0x8d, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x70, 0x01, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,
        0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0xae, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xbe, 0x8d,
        0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00,
        0x06, 0x02, 0xd2, 0x02, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x02, 0x02, 0x02, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0x01, 0x00, 0xfe, 0x53,
        0x61, 0x73, 0x63, 0x68, 0x69, 0x00, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x31, 0x0c, 0x71, 0x00, 0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xbe, 0x8d, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x70, 0x01, 0x4c, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
        0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0xae, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
        0xbd, 0x8d, 0xfc, 0xfe, 0x7f, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x06, 0x00, 0xab, 0x07, 0xd7, 0x02, 0x02, 0x02, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0x01, 0x00, 0xfe, 0x53, 0x61, 0x73, 0x63, 0x68,
        0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x05, 0xf1, 0x00, 0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x13, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0c, 0xf1,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0c, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x30, 0x05, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x5a, 0x40, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x40, 0x05, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0x0a, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x05, 0xf1, 0x00, 0x03, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x05, 0x05,
        0xdb, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x13, 0x00, 0x00, 0xff, 0x10, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05,
        0x00, 0x0b, 0x04, 0xd7, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x09, 0x00, 0x0b, 0x08, 0xe7, 0x01, 0x02, 0x68, 0x6f,
        0x00, 0xb5, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x12, 0x00, 0x00, 0x11, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03,
        0x0f, 0x01, 0x03, 0x11, 0x11, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0d, 0x00, 0x03, 0x02, 0x0e, 0x07, 0x00, 0x06,
        0x03, 0xd4, 0x01, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x01, 0x03, 0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0xfe, 0x00, 0xfe, 0x53, 0x61,
        0x73, 0x63, 0x68, 0x69, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00,
        0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x1d,
        0x00, 0x17, 0x08, 0xd3, 0xff, 0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x31, 0x20, 0x6c, 0x65, 0x66, 0x74, 0x0a, 0x00, 0x00, 0x05, 0x00, 0x0b,
        0x04, 0xd7, 0x01, 0x0f, 0x00, 0x00, 0x02, 0x03, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x11, 0x00, 0x00, 0x0f, 0x04,
        0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x10, 0x00, 0x00, 0x0f, 0x0f, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00,
        0x0b, 0x04, 0xd7, 0x00, 0x0f, 0x01, 0x00, 0x05, 0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x10, 0x00, 0x00, 0x04,
        0x05, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x0d, 0x00, 0x0b, 0x0c, 0xe7, 0x02, 0x10, 0x00, 0x00, 0x0d, 0x07, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x01, 0x03,
        0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0xfe, 0x00, 0xfe, 0x53, 0x61, 0x73, 0x63, 0x68, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x80, 0x0a, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0c, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed,
        0xae, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7c, 0x61, 0x3f, 0xfc, 0x7e, 0x00, 0x00, 0x06, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7c, 0x61,
        0x3f, 0xfc, 0x7e, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7c, 0x61, 0x3f, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x0b, 0x00, 0x0b, 0x0a, 0xe7, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00,
        0x0b, 0x00, 0x0b, 0x0a, 0xe7, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x0b, 0x00, 0x0b, 0x0a, 0xe7, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x0b, 0x00, 0x0b,
        0x0a, 0xe7, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x11, 0x00, 0x00, 0x0f, 0x04,
        0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x0d, 0x00, 0x02, 0x0f, 0x0e, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00,
        0x0b, 0x04, 0xd7, 0x00, 0x0f, 0x01, 0x00, 0x05, 0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x10, 0x00, 0x00, 0x04,
        0x05, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0f, 0x01, 0x02, 0x0d, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05,
        0x00, 0x0b, 0x04, 0xd7, 0x03, 0x12, 0x00, 0x01, 0x0b, 0x0b, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0e, 0x01, 0x00,
        0x08, 0x0c, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x0d, 0x00, 0x02, 0x06, 0x08, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02,
        0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0e, 0x00, 0x00, 0x0a, 0x09, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x0e, 0x00,
        0x01, 0x09, 0x0e, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x14, 0x00, 0x00, 0x07, 0x07, 0x07, 0x00, 0x06, 0x03, 0xd4,
        0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x13, 0x01, 0x03, 0x07, 0x03, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x04,
        0x00, 0x00, 0x10, 0x00, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x13, 0x01, 0x01, 0x05, 0x0e, 0x07, 0x00, 0x06, 0x03,
        0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x0b, 0x00, 0x00, 0x0a, 0x04, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01,
        0x12, 0x01, 0x01, 0x0a, 0x01, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x0d, 0x00, 0x00, 0x0f, 0x0b, 0x07, 0x00, 0x06,
        0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x09, 0x00, 0x02, 0x02, 0x10, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7,
        0x00, 0x12, 0x00, 0x00, 0x0c, 0x02, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x0e, 0x00, 0x01, 0x03, 0x0a, 0x07, 0x00,
        0x06, 0x03, 0xd4, 0x02, 0x06, 0x00, 0xab, 0x07, 0xd7, 0x01, 0x03, 0x01, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0xfe, 0xfe, 0x00, 0xfe, 0x53,
        0x61, 0x73, 0x63, 0x68, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0c, 0xf1, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0xae, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0xc0, 0x7c, 0x61, 0x3f, 0xfc, 0x7e, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
        0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7c, 0x61, 0x3f, 0xfc, 0x7e, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x5c, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7c,
        0x61, 0x3f, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x05, 0x00, 0x0b, 0x04, 0xd7, 0x02, 0x09, 0x01, 0x02, 0x11, 0x0e, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x03, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x03, 0x0b, 0x00,
        0x00, 0x0a, 0x11, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x00, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x00, 0x11, 0x01, 0x01, 0x0a, 0xff, 0x07, 0x00, 0x06, 0x03, 0xd4,
        0x01, 0x05, 0x00, 0x0b, 0x04, 0xd7, 0x01, 0x11, 0x00, 0x02, 0x00, 0x0d, 0x07, 0x00, 0x06, 0x03, 0xd4, 0x02
        //endregion
    )

    /**
     * Parses raw data from the given stream into a list of packets
     */
    private fun consumeAllPackets(from: InputStream): List<Message> {
        val list = mutableListOf<Message>()
        try {
            list.addAll(MessageReader(from))
        } catch (e: EOFException) {
            // ignore
        }
        return list
    }

    private fun consumeAllPackets(from: ByteArray) = consumeAllPackets(ByteArrayInputStream(from))

    /**
     * Marshals each package and writes the byte representation to the given stream
     */
    private fun writePacketsToStream(packets: List<Message>, out: OutputStream) {
        val writer = MessageWriter(out)
        packets.forEach { packet ->
            assertTrue(writer.write(packet))
        }
    }

    private fun List<Message>.toByteArray(): ByteArray {
        val os = ByteArrayOutputStream()
        writePacketsToStream(this, os)
        return os.toByteArray()
    }

    private fun replayGameFrom(packets: List<Message>): Game {
        val game = Game()
        val processor = GameClientMessageHandler(game)

        val client = GameClient(Game(), GameConfig(), CrashReporter())
        processor.notifyConnected(client)
        for (pkg in packets) {
            processor.handleMessage(pkg)
        }

        return game
    }

    /**
     * GAMEMODE_4_COLORS_4_PLAYERS
     * 1: 81 points, 2 stone left
     * 2: 69 points, 5 stones left
     * 3: 66 points, 5 stones left
     * 4: 58 points, 7 stones left
     */
    @Test
    fun test_classic() {
        val packets = consumeAllPackets(gameDataClassic)
        assertEquals(137, packets.size)

        val game = replayGameFrom(packets)

        assertTrue(game.isFinished)
        assertTrue(game.isStarted)
        assertEquals(GameMode.GAMEMODE_4_COLORS_4_PLAYERS, game.gameMode)
        assertEquals(20, game.board.width)
        assertEquals(20, game.board.height)

        val results = game.getPlayerScores()
        assertEquals(81, results[0].totalPoints)
        assertEquals(2, results[0].stonesLeft)
        assertEquals(69, results[1].totalPoints)
        assertEquals(5, results[1].stonesLeft)
        assertEquals(66, results[2].totalPoints)
        assertEquals(5, results[2].stonesLeft)
        assertEquals(58, results[3].totalPoints)
        assertEquals(7, results[3].stonesLeft)
    }

    /**
     * GAMEMODE_4_COLORS_4_PLAYERS
     *
     * manual play, half way through, with names and everything
     */
    @Test
    fun test_classic_manual() {
        val packets = consumeAllPackets(gameDataClassicManual)
        assertEquals(99, packets.size)

        // marshal and unmarshal and compare the model objects for equality
        val bytes = packets.toByteArray()
        val packets2 = consumeAllPackets(bytes)
        assertEquals(99, packets2.size)
        packets.zip(packets2).forEach { (m1, m2) ->
            assertEquals(m1, m2)
        }
        assertEquals(packets, packets2)

        val game = replayGameFrom(packets)
        val board = game.board

        assertFalse(game.isFinished)
        assertTrue(game.isStarted)
        assertEquals(GameMode.GAMEMODE_4_COLORS_4_PLAYERS, game.gameMode)
        assertEquals(20, board.width)
        assertEquals(20, board.height)

        val scores = game.getPlayerScores()
        // the scores are sorted by place
        scores[0].apply {
            assertEquals(151, turnsLeft)
            assertEquals(40, totalPoints)
            assertEquals(13, stonesLeft)
            assertEquals(1, place)
        }
        scores[1].apply {
            assertEquals(467, turnsLeft)
            assertEquals(40, totalPoints)
            assertEquals(13, stonesLeft)
            assertEquals(1, place)
        }
        scores[2].apply {
            assertEquals(256, turnsLeft)
            assertEquals(35, totalPoints)
            assertEquals(14, stonesLeft)
            assertEquals(3, place)
        }
        scores[3].apply {
            assertEquals(220, turnsLeft)
            assertEquals(34, totalPoints)
            assertEquals(14, stonesLeft)
            assertEquals(4, place)
        }
    }

    /**
     * GAMEMODE_DUO
     * 1 (orange): 66 points, 5 stones left
     * 2 (purple): 59 points, 7 stones left
     */
    @Test
    fun test_duo() {
        val packets = consumeAllPackets(gameDataDuo)
        assertEquals(66, packets.size)

        // marshal and unmarshal and compare the model objects for equality
        val bytes = packets.toByteArray()
        val packets2 = consumeAllPackets(bytes)
        assertEquals(66, packets2.size)
        packets.zip(packets2).forEach { (m1, m2) ->
            assertEquals(m1, m2)
        }
        assertEquals(packets, packets2)

        val game = replayGameFrom(packets)
        val board = game.board

        assertTrue(game.isFinished)
        assertTrue(game.isStarted)
        assertEquals(GameMode.GAMEMODE_DUO, game.gameMode)
        assertEquals(14, board.width)
        assertEquals(14, board.height)

        val results = game.getPlayerScores()
        assertEquals(66, results[0].totalPoints)
        assertEquals(5, results[0].stonesLeft)
        assertEquals(1, results[0].place)
        assertEquals(0, results[0].turnsLeft)
        assertEquals(59, results[1].totalPoints)
        assertEquals(7, results[1].stonesLeft)
        assertEquals(2, results[1].place)
        assertEquals(0, results[1].turnsLeft)
    }

    /**
     * GAMEMODE_JUNIOR
     * 1 (orange): 60 points, 10 stones left
     * 2 (purple): 55 points, 11 stones left
     */
    @Test
    fun test_junior() {
        val packets = consumeAllPackets(gameDataJunior)
        assertEquals(60, packets.size)

        // marshal and unmarshal and compare the model objects for equality
        val bytes = packets.toByteArray()
        val packets2 = consumeAllPackets(bytes)
        assertEquals(60, packets2.size)
        packets.zip(packets2).forEach { (m1, m2) ->
            assertEquals(m1, m2)
        }
        assertEquals(packets, packets2)

        val game = replayGameFrom(packets)

        assertTrue(game.isFinished)
        assertTrue(game.isStarted)
        assertEquals(GameMode.GAMEMODE_JUNIOR, game.gameMode)
        assertEquals(14, game.board.width)
        assertEquals(14, game.board.height)
        val results = game.getPlayerScores()

        assertEquals(60, results[0].totalPoints)
        assertEquals(10, results[0].stonesLeft)
        assertEquals(55, results[1].totalPoints)
        assertEquals(11, results[1].stonesLeft)
    }
}